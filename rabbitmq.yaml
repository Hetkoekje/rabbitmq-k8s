apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: test-rabbitmq
  labels:
    app: rabbitmq
    environment: test-rabbitmq
spec:
  replicas: 3
  serviceName: rabbitmq
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: rabbitmq
      environment: test-rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
        environment: test-rabbitmq
    spec:
      serviceAccountName: rabbitmq #important for rbac rules
      terminationGracePeriodSeconds: 30
      containers:
      - name: rabbitmq
        image: rabbitmq:3.7
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 0.5
            memory: 512Mi
          requests:
            cpu: 0.03
            memory: 512Mi
        ports:
          - name: http
            protocol: TCP
            containerPort: 15672
          - name: amqp
            protocol: TCP
            containerPort: 5672
        volumeMounts:
         - name: rabbitmq-data
           mountPath: /var/lib/rabbitmq
         - name: rabbitmq-config
           mountPath: /etc/rabbitmq
        #livenessProbe:
        #  exec:
        #    command: ["rabbitmqctl", "status"]
        #  initialDelaySeconds: 30
        #  timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 30
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(HOSTNAME).rabbitmq.$(NAMESPACE).svc.cluster.local"
          - name: K8S_SERVICE_NAME
            value: "rabbitmq"
          - name: RABBITMQ_ERLANG_COOKIE
            value: "mycookie"
          - name: RABBITMQ_DEFAULT_USER
            value: "admin"
          - name: RABBITMQ_DEFAULT_PASS
            value: "admin"
      volumes:
        - name: rabbitmq-config
          configMap:
            name: rabbitmq-config
            items:
            - key: rabbitmq.conf
              path: rabbitmq.conf
            - key: enabled_plugins
              path: enabled_plugins
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
      annotations:
        volume.beta.kubernetes.io/storage-class: fast
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
